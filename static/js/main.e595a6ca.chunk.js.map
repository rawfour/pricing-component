{"version":3,"sources":["assets/img/bg-bottom.svg","assets/img/bg-top.svg","theme/MainTheme.js","templates/MainTemplate.js","theme/GlobalStyle.js","components/Background.js","context.js","components/Title.js","components/Switcher.js","components/Button.js","components/Card.js","components/CardCompare.js","components/Pricing.js","App.js","index.js"],"names":["module","exports","theme","colors","primary","veryLightGray","lighGary","gray","darkGary","background","gradient","white","shadow","buttonShadow","fontSizes","xs","s","m","l","xl","xxl","xxxl","animations","fadeIn","keyframes","breakpoints","sm","md","lg","MainTemplate","children","GlobalStyle","createGlobalStyle","StyledBackground","styled","div","StyledTopImage","img","StyledBottomImage","Background","src","bgTop","bgBottom","SwitcherContext","createContext","switcher","action","StyledTitle","h1","Title","StyledSwitcherWrapper","StyledSwitcherButton","span","StyledLabel","label","StyledCheckbox","input","StyledOptions","Switcher","Consumer","htmlFor","checked","onChange","id","name","type","isOn","StyledButton","button","awarded","css","Button","defaultProps","StyledCardWrapper","roundedLeft","roundedRight","StyledName","h3","StyledPrice","StyledCurrency","StyledBenefitsWrapper","StyledBenefit","Card","content","monthly","annually","currency","benefits","map","item","key","StyledCardsWrapper","basic","pro","master","CardCompare","StyledPricingWrapper","Pricing","useState","setChecked","Provider","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e595a6ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-bottom.e72dda74.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-top.bdfbd58a.svg\";","import { keyframes } from 'styled-components';\n\nconst animations = {\n  fadeIn: keyframes`100% {opacity: 1;}`,\n};\n\nconst fontSizes = {\n  xs: '1.1rem',\n  s: '1.3rem',\n  m: '1.4rem',\n  l: '1.6rem',\n  xl: '2.8rem',\n  xxl: '3.5rem',\n  xxxl: '6.2rem',\n};\n\nconst breakpoints = {\n  sm: '(min-width: 600px)',\n  md: '(min-width: 900px)',\n  lg: '(min-width: 1280px)',\n  xl: '(min-width: 1920px)',\n};\n\nexport const theme = {\n  colors: {\n    primary: '#7d7db3',\n    veryLightGray: 'hsl(240, 78%, 98%)',\n    lighGary: 'hsl(234, 14%, 74%)',\n    gray: 'hsl(233, 13%, 49%)',\n    darkGary: 'hsl(232, 13%, 33%)',\n    background: '#f7f7ff',\n    gradient: 'linear-gradient(to bottom right, hsl(236, 72%, 79%), hsl(237, 63%, 64%))',\n    white: '#ffffff',\n  },\n  shadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n  buttonShadow: '0 0 2px 0 rgba(10, 10, 10, 0.29)',\n  fontSizes,\n  animations,\n  breakpoints,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from '../theme/MainTheme';\n\nconst MainTemplate = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nMainTemplate.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element, PropTypes.object]).isRequired,\n};\n\nexport default MainTemplate;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: ${({ theme }) => theme.fontSizes.m};\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    font-family: 'Montserrat', Arial, sans-serif;\r\n    background-color: #f7f7ff;\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport bgBottom from '../assets/img/bg-bottom.svg';\nimport bgTop from '../assets/img/bg-top.svg';\n\nconst StyledBackground = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n`;\n\nconst StyledTopImage = styled.img`\n  display: block;\n  position: absolute;\n  top: -40px;\n  right: -195px;\n  @media ${({ theme }) => theme.breakpoints.lg} {\n    top: -10px;\n    right: -25px;\n  }\n  @media ${({ theme }) => theme.breakpoints.xl} {\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst StyledBottomImage = styled.img`\n  display: none;\n  @media ${({ theme }) => theme.breakpoints.lg} {\n    display: block;\n    position: absolute;\n    bottom: -25px;\n    left: -30px;\n  }\n  @media ${({ theme }) => theme.breakpoints.xl} {\n    bottom: 0;\n    left: 0;\n  }\n`;\n\nconst Background = () => {\n  return (\n    <StyledBackground>\n      <StyledTopImage src={bgTop} />\n      <StyledBottomImage src={bgBottom} />\n    </StyledBackground>\n  );\n};\n\nexport default Background;\n","import { createContext } from 'react';\n\nconst func = () => {};\n\nexport const SwitcherContext = createContext({ switcher: false, action: func });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledTitle = styled.h1`\n  font-size: ${({ theme }) => theme.fontSizes.xl};\n`;\n\nconst Title = ({ children }) => {\n  return <StyledTitle>{children}</StyledTitle>;\n};\n\nTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SwitcherContext } from '../context';\r\n\r\nconst StyledSwitcherWrapper = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: auto auto auto;\r\n  grid-gap: 18px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    padding: 0;\r\n    margin-bottom: 25px;\r\n    grid-gap: 23px;\r\n  }\r\n`;\r\n\r\nconst StyledSwitcherButton = styled.span`\r\n  content: '';\r\n  position: absolute;\r\n  top: 3.5px;\r\n  left: 3.5px;\r\n  width: 23px;\r\n  height: 23px;\r\n  border-radius: 45px;\r\n  transition: 0.2s;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  box-shadow: ${({ theme }) => theme.buttonShadow};\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  width: 52px;\r\n  height: 30px;\r\n  background-image: ${({ theme }) => theme.colors.gradient};\r\n  border-radius: 100px;\r\n  position: relative;\r\n  transition: 0.2s;\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    transition: 0.2s;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    border-radius: 100px;\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n  }\r\n  &:hover:before {\r\n    opacity: 0.6;\r\n  }\r\n  &:active ${StyledSwitcherButton} {\r\n    width: 27px;\r\n  }\r\n`;\r\n\r\nconst StyledCheckbox = styled.input`\r\n  height: 0;\r\n  width: 0;\r\n  visibility: hidden;\r\n  position: absolute;\r\n  &:checked + ${StyledLabel} {\r\n    ${StyledSwitcherButton} {\r\n      left: calc(100% - 3.5px);\r\n      transform: translateX(-100%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledOptions = styled.label`\r\n  font-size: ${({ theme }) => theme.fontSizes.s};\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.lighGary};\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst Switcher = () => {\r\n  return (\r\n    <SwitcherContext.Consumer>\r\n      {(switcher) => (\r\n        <StyledSwitcherWrapper>\r\n          <StyledOptions htmlFor=\"switch\">Annually</StyledOptions>\r\n          <StyledCheckbox\r\n            checked={switcher.checked}\r\n            onChange={switcher.action}\r\n            id=\"switch\"\r\n            name=\"switch\"\r\n            type=\"checkbox\"\r\n          />\r\n          <StyledLabel isOn={switcher.checked} htmlFor=\"switch\">\r\n            <StyledSwitcherButton />\r\n          </StyledLabel>\r\n          <StyledOptions htmlFor=\"switch\">Monthly</StyledOptions>\r\n        </StyledSwitcherWrapper>\r\n      )}\r\n    </SwitcherContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Switcher;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst StyledButton = styled.button`\n  background-color: transparent;\n  position: relative;\n  padding: 13px;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  letter-spacing: 1.7px;\n  font-weight: 700;\n  margin-top: 10px;\n  cursor: pointer;\n  transition: 0.3s;\n  z-index: 1;\n  @media ${({ theme }) => theme.breakpoints.lg} {\n    letter-spacing: 2.2px;\n    padding: 12px;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: 0.3s;\n    z-index: -1;\n    border-radius: 5px;\n    background-image: ${({ theme }) => theme.colors.gradient};\n  }\n  &:hover {\n    color: ${({ theme }) => theme.colors.primary};\n    border: 1px solid ${({ theme }) => theme.colors.gray};\n    &:before {\n      opacity: 0;\n    }\n  }\n  ${({ awarded }) =>\n    awarded &&\n    css`\n      background-color: ${({ theme }) => theme.colors.white};\n      color: ${({ theme }) => theme.colors.primary};\n      &:before {\n        display: none;\n      }\n      &:hover {\n        color: ${({ theme }) => theme.colors.white};\n        background-color: transparent;\n        border: 1px solid ${({ theme }) => theme.colors.white};\n      }\n    `}\n`;\n\nconst Button = ({ children, awarded }) => {\n  return (\n    <StyledButton type=\"button\" awarded={awarded}>\n      {children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  awarded: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  awarded: false,\n};\n\nexport default Button;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\nimport { SwitcherContext } from '../context';\r\nimport Button from './Button';\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: inline-grid;\r\n  width: 280px;\r\n  grid-gap: 15px;\r\n  padding: 27px 25px;\r\n  border-radius: 10px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    width: 315px;\r\n    grid-gap: 20px;\r\n    padding: 27px 28px;\r\n  }\r\n  ${({ awarded }) =>\r\n    awarded &&\r\n    css`\r\n      background-image: ${({ theme }) => theme.colors.gradient};\r\n      color: ${({ theme }) => theme.colors.white};\r\n      padding: 30px 25px;\r\n      @media ${({ theme }) => theme.breakpoints.lg} {\r\n        padding: 49px 28px;\r\n        box-shadow: none;\r\n      }\r\n    `}\r\n    ${({ roundedLeft }) =>\r\n      roundedLeft &&\r\n      css`\r\n        @media ${({ theme }) => theme.breakpoints.lg} {\r\n          border-radius: 10px 0 0 10px;\r\n        }\r\n      `}\r\n\r\n    ${({ roundedRight }) =>\r\n      roundedRight &&\r\n      css`\r\n        @media ${({ theme }) => theme.breakpoints.lg} {\r\n          border-radius: 0 10px 10px 0;\r\n        }\r\n      `}\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  font-size: ${({ theme }) => theme.fontSizes.l};\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledPrice = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 700;\r\n  letter-spacing: -2px;\r\n  font-size: ${({ theme }) => theme.fontSizes.xxxl};\r\n  color: ${({ theme }) => theme.colors.darkGary};\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    letter-spacing: 0;\r\n  }\r\n  ${({ awarded }) =>\r\n    awarded &&\r\n    css`\r\n      color: ${({ theme }) => theme.colors.white};\r\n    `}\r\n`;\r\n\r\nconst StyledCurrency = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSizes.xxl};\r\n  margin-right: 5px;\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst StyledBenefitsWrapper = styled.div`\r\n  display: grid;\r\n  grid-gap: 1px;\r\n  margin-top: 5px;\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    grid-gap: 3px;\r\n  }\r\n`;\r\n\r\nconst StyledBenefit = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSizes.s};\r\n  text-align: center;\r\n  padding: 14px 0;\r\n  font-weight: 700;\r\n  border-top: 1px solid ${({ theme }) => theme.colors.lighGary};\r\n  &:last-child {\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.lighGary};\r\n  }\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    font-size: ${({ theme }) => theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nconst Card = ({ awarded, roundedLeft, roundedRight, content }) => {\r\n  const { name, monthly, annually, currency, benefits } = content;\r\n  return (\r\n    <SwitcherContext.Consumer>\r\n      {(switcher) => (\r\n        <StyledCardWrapper awarded={awarded} roundedLeft={roundedLeft} roundedRight={roundedRight}>\r\n          <StyledName>{name}</StyledName>\r\n          <StyledPrice awarded={awarded}>\r\n            <StyledCurrency>{currency}</StyledCurrency>\r\n            {switcher.checked ? monthly : annually}\r\n          </StyledPrice>\r\n          <StyledBenefitsWrapper>\r\n            {benefits.map((item) => (\r\n              <StyledBenefit key={item}>{item}</StyledBenefit>\r\n            ))}\r\n          </StyledBenefitsWrapper>\r\n          <Button awarded={awarded}>Learn more</Button>\r\n        </StyledCardWrapper>\r\n      )}\r\n    </SwitcherContext.Consumer>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  awarded: PropTypes.bool,\r\n  roundedLeft: PropTypes.bool,\r\n  roundedRight: PropTypes.bool,\r\n  content: PropTypes.shape(),\r\n};\r\n\r\nCard.defaultProps = {\r\n  awarded: false,\r\n  roundedLeft: false,\r\n  roundedRight: false,\r\n  content: {\r\n    name: '-',\r\n    monthly: '-',\r\n    annually: false,\r\n    currency: '-',\r\n    benefits: ['-', '-', '-'],\r\n  },\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 25px;\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    display: flex;\r\n    grid-gap: 0;\r\n  }\r\n`;\r\n\r\nconst basic = {\r\n  name: 'Basic',\r\n  monthly: '19.99',\r\n  annually: '199.99',\r\n  currency: '$',\r\n  benefits: ['500 GB Storage', '2 Users Allowed', 'Send up to 3GB'],\r\n};\r\n\r\nconst pro = {\r\n  name: 'Professional',\r\n  monthly: '24.99',\r\n  annually: '249.99',\r\n  currency: '$',\r\n  benefits: ['1 TB Storage', '5 Users Allowed', 'Send up to 10GB'],\r\n};\r\n\r\nconst master = {\r\n  name: 'Master',\r\n  monthly: '39.99',\r\n  annually: '399.99',\r\n  currency: '$',\r\n  benefits: ['2 TB Storage', '10 Users Allowed', 'Send up to 20GB'],\r\n};\r\n\r\nconst CardCompare = () => {\r\n  return (\r\n    <StyledCardsWrapper>\r\n      <Card roundedLeft content={basic} />\r\n      <Card awarded content={pro} />\r\n      <Card roundedRight content={master} />\r\n    </StyledCardsWrapper>\r\n  );\r\n};\r\n\r\nexport default CardCompare;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SwitcherContext } from '../context';\r\nimport Title from './Title';\r\nimport Switcher from './Switcher';\r\nimport CardCompare from './CardCompare';\r\n\r\nconst StyledPricingWrapper = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: 30px;\r\n  padding: 55px 0;\r\n  @media ${({ theme }) => theme.breakpoints.lg} {\r\n    position: fixed;\r\n    padding: 65px 0;\r\n    grid-gap: 35px;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst Pricing = () => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <SwitcherContext.Provider value={{ checked, action: handleChange }}>\r\n      <StyledPricingWrapper>\r\n        <Title>Our Pricing</Title>\r\n        <Switcher />\r\n        <CardCompare />\r\n      </StyledPricingWrapper>\r\n    </SwitcherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","import React from 'react';\nimport MainTemplate from './templates/MainTemplate';\nimport GlobalStyle from './theme/GlobalStyle';\nimport Background from './components/Background';\nimport Pricing from './components/Pricing';\n\nconst App = () => {\n  return (\n    <MainTemplate>\n      <Background />\n      <Pricing />\n      <GlobalStyle />\n    </MainTemplate>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}